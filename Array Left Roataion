/*A left rotation operation on an array shifts each of the array's elements  unit to the left. For example, if  left rotations are performed on array , then the array would become .

Given an array  of  integers and a number, , perform  left rotations on the array. Return the updated array to be printed as a single line of space-separated integers.

Function Description

Complete the function rotLeft in the editor below. It should return the resulting array of integers.

rotLeft has the following parameter(s):

An array of integers .
An integer , the number of rotations.
Input Format*/

void cirreverse(vector<int>& a){
    int t=a[a.size()-1];
    for(long unsigned int i=a.size()-1;i>=1;i--){
    a[i]=a[i-1];

}
a[0]=t;
}

void revRot(vector<int>& a){                          /////if we did not use the reverse one then time limit exceeded.
  int t=a[0];
  for(long unsigned int i=0;i<a.size()-1;i++){
      a[i]=a[i+1];
  }
 a[a.size()-1]=t;
}

vector<string> split_string(string);

// Complete the rotLeft function below.
vector<int> rotLeft(vector<int> a, int d) {
         d=d%a.size();
   if(d>(a.size()/2)){
       d=a.size()-d;
       while(d--){
            cirreverse(a);
       }
   }
   else{
       while(d--){
           revRot(a);
       }
   }
//    vector<int> result;
//    for(long unsigned int i=0;i<a.size();i++){
//         result.push_back(a[queraies[i]]);
//    }
    return a;
}

